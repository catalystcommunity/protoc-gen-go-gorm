// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: demo/example.proto

package example

import (
	_ "github.com/catalystsquad/protoc-gen-go-gorm/options"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnumOne int32

const (
	EnumOne_Default EnumOne = 0
	EnumOne_One     EnumOne = 1
	EnumOne_Two     EnumOne = 2
	EnumOne_Three   EnumOne = 3
	EnumOne_Four    EnumOne = 4
	EnumOne_Five    EnumOne = 5
	EnumOne_Six     EnumOne = 6
	EnumOne_Seven   EnumOne = 7
	EnumOne_Eight   EnumOne = 8
	EnumOne_Nine    EnumOne = 9
)

// Enum value maps for EnumOne.
var (
	EnumOne_name = map[int32]string{
		0: "Default",
		1: "One",
		2: "Two",
		3: "Three",
		4: "Four",
		5: "Five",
		6: "Six",
		7: "Seven",
		8: "Eight",
		9: "Nine",
	}
	EnumOne_value = map[string]int32{
		"Default": 0,
		"One":     1,
		"Two":     2,
		"Three":   3,
		"Four":    4,
		"Five":    5,
		"Six":     6,
		"Seven":   7,
		"Eight":   8,
		"Nine":    9,
	}
)

func (x EnumOne) Enum() *EnumOne {
	p := new(EnumOne)
	*p = x
	return p
}

func (x EnumOne) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnumOne) Descriptor() protoreflect.EnumDescriptor {
	return file_demo_example_proto_enumTypes[0].Descriptor()
}

func (EnumOne) Type() protoreflect.EnumType {
	return &file_demo_example_proto_enumTypes[0]
}

func (x EnumOne) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnumOne.Descriptor instead.
func (EnumOne) EnumDescriptor() ([]byte, []int) {
	return file_demo_example_proto_rawDescGZIP(), []int{0}
}

type Thing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: fake:"skip"
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	UpdatedAt string `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" fake:"skip"`
	// @gotags: fake:"{price:0.00,1000.00}"
	ADouble float64 `protobuf:"fixed64,4,opt,name=a_double,json=aDouble,proto3" json:"a_double,omitempty" fake:"{price:0.00,1000.00}"`
	// @gotags: fake:"{price:0.00,1000.00}"
	AFloat float32 `protobuf:"fixed32,5,opt,name=a_float,json=aFloat,proto3" json:"a_float,omitempty" fake:"{price:0.00,1000.00}"`
	// @gotags: fake:"{int32}"
	AnInt32 int32 `protobuf:"varint,6,opt,name=an_int32,json=anInt32,proto3" json:"an_int32,omitempty" fake:"{int32}"`
	// @gotags: fake:"{number:9223372036854775807}"
	AnInt64 int64 `protobuf:"varint,7,opt,name=an_int64,json=anInt64,proto3" json:"an_int64,omitempty" fake:"{number:9223372036854775807}"`
	// @gotags: fake:"{bool}"
	ABool bool `protobuf:"varint,16,opt,name=a_bool,json=aBool,proto3" json:"a_bool,omitempty" fake:"{bool}"`
	// @gotags: fake:"{hackerphrase}"
	AString string `protobuf:"bytes,17,opt,name=a_string,json=aString,proto3" json:"a_string,omitempty" fake:"{hackerphrase}"`
	// @gotags: fake:"skip"
	ABytes []byte `protobuf:"bytes,18,opt,name=a_bytes,json=aBytes,proto3" json:"a_bytes,omitempty" fake:"skip"`
	// @gotags: fake:"{price:0.00,1000.00}"
	Doubles []float64 `protobuf:"fixed64,19,rep,packed,name=doubles,proto3" json:"doubles,omitempty" fake:"{price:0.00,1000.00}"`
	// @gotags: fake:"{price:0.00,1000.00}"
	Floats []float32 `protobuf:"fixed32,20,rep,packed,name=floats,proto3" json:"floats,omitempty" fake:"{price:0.00,1000.00}"`
	// @gotags: fake:"{int32}"
	Int32S []int32 `protobuf:"varint,21,rep,packed,name=int32s,proto3" json:"int32s,omitempty" fake:"{int32}"`
	// @gotags: fake:"{number:9223372036854775807}"
	Int64S []int64 `protobuf:"varint,22,rep,packed,name=int64s,proto3" json:"int64s,omitempty" fake:"{number:9223372036854775807}"`
	// @gotags: fake:"{bool}"
	Bools []bool `protobuf:"varint,31,rep,packed,name=bools,proto3" json:"bools,omitempty" fake:"{bool}"`
	// @gotags: fake:"{hackerphrase}"
	Strings []string `protobuf:"bytes,32,rep,name=strings,proto3" json:"strings,omitempty" fake:"{hackerphrase}"`
	// @gotags: fake:"skip"
	Bytess [][]byte `protobuf:"bytes,33,rep,name=bytess,proto3" json:"bytess,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	OptionalScalarField *string `protobuf:"bytes,34,opt,name=optional_scalar_field,json=optionalScalarField,proto3,oneof" json:"optional_scalar_field,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	AStructpb *structpb.Struct `protobuf:"bytes,35,opt,name=a_structpb,json=aStructpb,proto3" json:"a_structpb,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	BelongsTo *BelongsToThing `protobuf:"bytes,36,opt,name=belongs_to,json=belongsTo,proto3" json:"belongs_to,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	HasOne *HasOneThing `protobuf:"bytes,37,opt,name=has_one,json=hasOne,proto3" json:"has_one,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	HasMany []*HasManyThing `protobuf:"bytes,38,rep,name=has_many,json=hasMany,proto3" json:"has_many,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	ManyToMany []*ManyToManyThing `protobuf:"bytes,39,rep,name=many_to_many,json=manyToMany,proto3" json:"many_to_many,omitempty" fake:"skip"`
	// @gotags: fake:"{number:1,9}"
	IntEnum EnumOne `protobuf:"varint,40,opt,name=int_enum,json=intEnum,proto3,enum=example.EnumOne" json:"int_enum,omitempty" fake:"{number:1,9}"`
	// @gotags: fake:"{number:1,9}"
	StringEnum EnumOne `protobuf:"varint,41,opt,name=string_enum,json=stringEnum,proto3,enum=example.EnumOne" json:"string_enum,omitempty" fake:"{number:1,9}"`
	// @gotags: fake:"{number:1,9}"
	IntEnumList []EnumOne `protobuf:"varint,42,rep,packed,name=int_enum_list,json=intEnumList,proto3,enum=example.EnumOne" json:"int_enum_list,omitempty" fake:"{number:1,9}"`
	// @gotags: fake:"{number:1,9}"
	StringEnumList []EnumOne `protobuf:"varint,43,rep,packed,name=string_enum_list,json=stringEnumList,proto3,enum=example.EnumOne" json:"string_enum_list,omitempty" fake:"{number:1,9}"`
}

func (x *Thing) Reset() {
	*x = Thing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Thing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thing) ProtoMessage() {}

func (x *Thing) ProtoReflect() protoreflect.Message {
	mi := &file_demo_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thing.ProtoReflect.Descriptor instead.
func (*Thing) Descriptor() ([]byte, []int) {
	return file_demo_example_proto_rawDescGZIP(), []int{0}
}

func (x *Thing) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Thing) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Thing) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Thing) GetADouble() float64 {
	if x != nil {
		return x.ADouble
	}
	return 0
}

func (x *Thing) GetAFloat() float32 {
	if x != nil {
		return x.AFloat
	}
	return 0
}

func (x *Thing) GetAnInt32() int32 {
	if x != nil {
		return x.AnInt32
	}
	return 0
}

func (x *Thing) GetAnInt64() int64 {
	if x != nil {
		return x.AnInt64
	}
	return 0
}

func (x *Thing) GetABool() bool {
	if x != nil {
		return x.ABool
	}
	return false
}

func (x *Thing) GetAString() string {
	if x != nil {
		return x.AString
	}
	return ""
}

func (x *Thing) GetABytes() []byte {
	if x != nil {
		return x.ABytes
	}
	return nil
}

func (x *Thing) GetDoubles() []float64 {
	if x != nil {
		return x.Doubles
	}
	return nil
}

func (x *Thing) GetFloats() []float32 {
	if x != nil {
		return x.Floats
	}
	return nil
}

func (x *Thing) GetInt32S() []int32 {
	if x != nil {
		return x.Int32S
	}
	return nil
}

func (x *Thing) GetInt64S() []int64 {
	if x != nil {
		return x.Int64S
	}
	return nil
}

func (x *Thing) GetBools() []bool {
	if x != nil {
		return x.Bools
	}
	return nil
}

func (x *Thing) GetStrings() []string {
	if x != nil {
		return x.Strings
	}
	return nil
}

func (x *Thing) GetBytess() [][]byte {
	if x != nil {
		return x.Bytess
	}
	return nil
}

func (x *Thing) GetOptionalScalarField() string {
	if x != nil && x.OptionalScalarField != nil {
		return *x.OptionalScalarField
	}
	return ""
}

func (x *Thing) GetAStructpb() *structpb.Struct {
	if x != nil {
		return x.AStructpb
	}
	return nil
}

func (x *Thing) GetBelongsTo() *BelongsToThing {
	if x != nil {
		return x.BelongsTo
	}
	return nil
}

func (x *Thing) GetHasOne() *HasOneThing {
	if x != nil {
		return x.HasOne
	}
	return nil
}

func (x *Thing) GetHasMany() []*HasManyThing {
	if x != nil {
		return x.HasMany
	}
	return nil
}

func (x *Thing) GetManyToMany() []*ManyToManyThing {
	if x != nil {
		return x.ManyToMany
	}
	return nil
}

func (x *Thing) GetIntEnum() EnumOne {
	if x != nil {
		return x.IntEnum
	}
	return EnumOne_Default
}

func (x *Thing) GetStringEnum() EnumOne {
	if x != nil {
		return x.StringEnum
	}
	return EnumOne_Default
}

func (x *Thing) GetIntEnumList() []EnumOne {
	if x != nil {
		return x.IntEnumList
	}
	return nil
}

func (x *Thing) GetStringEnumList() []EnumOne {
	if x != nil {
		return x.StringEnumList
	}
	return nil
}

type BelongsToThing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: fake:"skip"
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" fake:"skip"`
	// @gotags: fake:"{name}"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" fake:"{name}"`
}

func (x *BelongsToThing) Reset() {
	*x = BelongsToThing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BelongsToThing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BelongsToThing) ProtoMessage() {}

func (x *BelongsToThing) ProtoReflect() protoreflect.Message {
	mi := &file_demo_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BelongsToThing.ProtoReflect.Descriptor instead.
func (*BelongsToThing) Descriptor() ([]byte, []int) {
	return file_demo_example_proto_rawDescGZIP(), []int{1}
}

func (x *BelongsToThing) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *BelongsToThing) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BelongsToThing) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *BelongsToThing) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HasOneThing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: fake:"skip"
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" fake:"skip"`
	// @gotags: fake:"{name}"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" fake:"{name}"`
	// @gotags: fake:"skip"
	ThingId *string `protobuf:"bytes,5,opt,name=thing_id,json=thingId,proto3,oneof" json:"thing_id,omitempty" fake:"skip"`
}

func (x *HasOneThing) Reset() {
	*x = HasOneThing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_example_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasOneThing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasOneThing) ProtoMessage() {}

func (x *HasOneThing) ProtoReflect() protoreflect.Message {
	mi := &file_demo_example_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasOneThing.ProtoReflect.Descriptor instead.
func (*HasOneThing) Descriptor() ([]byte, []int) {
	return file_demo_example_proto_rawDescGZIP(), []int{2}
}

func (x *HasOneThing) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *HasOneThing) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *HasOneThing) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *HasOneThing) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HasOneThing) GetThingId() string {
	if x != nil && x.ThingId != nil {
		return *x.ThingId
	}
	return ""
}

type HasManyThing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: fake:"skip"
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" fake:"skip"`
	// @gotags: fake:"{name}"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" fake:"{name}"`
	// @gotags: fake:"skip"
	ThingId *string `protobuf:"bytes,5,opt,name=thing_id,json=thingId,proto3,oneof" json:"thing_id,omitempty" fake:"skip"`
}

func (x *HasManyThing) Reset() {
	*x = HasManyThing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_example_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HasManyThing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasManyThing) ProtoMessage() {}

func (x *HasManyThing) ProtoReflect() protoreflect.Message {
	mi := &file_demo_example_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasManyThing.ProtoReflect.Descriptor instead.
func (*HasManyThing) Descriptor() ([]byte, []int) {
	return file_demo_example_proto_rawDescGZIP(), []int{3}
}

func (x *HasManyThing) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *HasManyThing) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *HasManyThing) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *HasManyThing) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HasManyThing) GetThingId() string {
	if x != nil && x.ThingId != nil {
		return *x.ThingId
	}
	return ""
}

type ManyToManyThing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: fake:"skip"
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" fake:"skip"`
	// @gotags: fake:"skip"
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" fake:"skip"`
	// @gotags: fake:"{name}"
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" fake:"{name}"`
}

func (x *ManyToManyThing) Reset() {
	*x = ManyToManyThing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_demo_example_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManyToManyThing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManyToManyThing) ProtoMessage() {}

func (x *ManyToManyThing) ProtoReflect() protoreflect.Message {
	mi := &file_demo_example_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManyToManyThing.ProtoReflect.Descriptor instead.
func (*ManyToManyThing) Descriptor() ([]byte, []int) {
	return file_demo_example_proto_rawDescGZIP(), []int{4}
}

func (x *ManyToManyThing) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ManyToManyThing) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ManyToManyThing) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ManyToManyThing) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_demo_example_proto protoreflect.FileDescriptor

var file_demo_example_proto_rawDesc = []byte{
	0x0a, 0x12, 0x64, 0x65, 0x6d, 0x6f, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc6, 0x08, 0x0a, 0x05, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x5f, 0x64,
	0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x61, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x61, 0x6e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x6e, 0x5f, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x6e, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x61, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x07, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x06, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x08, 0x52,
	0x05, 0x62, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x20, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x79, 0x74, 0x65, 0x73, 0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x06, 0x62, 0x79, 0x74, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x15, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x5f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x13, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x36, 0x0a, 0x0a, 0x61, 0x5f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x70, 0x62, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x09,
	0x61, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x70, 0x62, 0x12, 0x3e, 0x0a, 0x0a, 0x62, 0x65, 0x6c,
	0x6f, 0x6e, 0x67, 0x73, 0x5f, 0x74, 0x6f, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x42, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x54,
	0x6f, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x22, 0x00, 0x52, 0x09,
	0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x54, 0x6f, 0x12, 0x35, 0x0a, 0x07, 0x68, 0x61, 0x73,
	0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x48, 0x61, 0x73, 0x4f, 0x6e, 0x65, 0x54, 0x68, 0x69, 0x6e, 0x67,
	0x42, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x1a, 0x00, 0x52, 0x06, 0x68, 0x61, 0x73, 0x4f, 0x6e, 0x65,
	0x12, 0x38, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x18, 0x26, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x48, 0x61, 0x73,
	0x4d, 0x61, 0x6e, 0x79, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x2a,
	0x00, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x42, 0x0a, 0x0c, 0x6d, 0x61,
	0x6e, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x18, 0x27, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x4d, 0x61, 0x6e, 0x79, 0x54,
	0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x42, 0x06, 0xba, 0xb9, 0x19, 0x02,
	0x32, 0x00, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x79, 0x54, 0x6f, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x2b,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f,
	0x6e, 0x65, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x39, 0x0a, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f,
	0x6e, 0x65, 0x42, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x40, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x34, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x6e, 0x65, 0x52,
	0x0b, 0x69, 0x6e, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x10,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x2b, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x6e, 0x65, 0x42, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x40, 0x01,
	0x52, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x75, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42,
	0x18, 0x0a, 0x16, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x61,
	0x6c, 0x61, 0x72, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0xbe, 0x01, 0x0a, 0x0e, 0x42, 0x65,
	0x6c, 0x6f, 0x6e, 0x67, 0x73, 0x54, 0x6f, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x13, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x06, 0xba, 0xb9, 0x19,
	0x02, 0x08, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0xe8, 0x01, 0x0a, 0x0b, 0x48,
	0x61, 0x73, 0x4f, 0x6e, 0x65, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x5f, 0x69, 0x64, 0x22, 0xe9, 0x01, 0x0a, 0x0c, 0x48, 0x61, 0x73, 0x4d, 0x61, 0x6e,
	0x79, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x74, 0x68, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x22, 0xbf, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x6e, 0x79, 0x54, 0x6f, 0x4d, 0x61, 0x6e, 0x79,
	0x54, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x3a, 0x06, 0xba, 0xb9, 0x19, 0x02, 0x08, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x69, 0x64, 0x2a, 0x70, 0x0a, 0x07, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x6e, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f,
	0x6e, 0x65, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x77, 0x6f, 0x10, 0x02, 0x12, 0x09, 0x0a,
	0x05, 0x54, 0x68, 0x72, 0x65, 0x65, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x6f, 0x75, 0x72,
	0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x76, 0x65, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03,
	0x53, 0x69, 0x78, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x65, 0x76, 0x65, 0x6e, 0x10, 0x07,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x69, 0x67, 0x68, 0x74, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x69, 0x6e, 0x65, 0x10, 0x09, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x79, 0x73, 0x74, 0x73, 0x71, 0x75, 0x61,
	0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x2d,
	0x67, 0x6f, 0x72, 0x6d, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x3b, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_demo_example_proto_rawDescOnce sync.Once
	file_demo_example_proto_rawDescData = file_demo_example_proto_rawDesc
)

func file_demo_example_proto_rawDescGZIP() []byte {
	file_demo_example_proto_rawDescOnce.Do(func() {
		file_demo_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_demo_example_proto_rawDescData)
	})
	return file_demo_example_proto_rawDescData
}

var file_demo_example_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_demo_example_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_demo_example_proto_goTypes = []interface{}{
	(EnumOne)(0),                  // 0: example.EnumOne
	(*Thing)(nil),                 // 1: example.Thing
	(*BelongsToThing)(nil),        // 2: example.BelongsToThing
	(*HasOneThing)(nil),           // 3: example.HasOneThing
	(*HasManyThing)(nil),          // 4: example.HasManyThing
	(*ManyToManyThing)(nil),       // 5: example.ManyToManyThing
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 7: google.protobuf.Struct
}
var file_demo_example_proto_depIdxs = []int32{
	6,  // 0: example.Thing.created_at:type_name -> google.protobuf.Timestamp
	7,  // 1: example.Thing.a_structpb:type_name -> google.protobuf.Struct
	2,  // 2: example.Thing.belongs_to:type_name -> example.BelongsToThing
	3,  // 3: example.Thing.has_one:type_name -> example.HasOneThing
	4,  // 4: example.Thing.has_many:type_name -> example.HasManyThing
	5,  // 5: example.Thing.many_to_many:type_name -> example.ManyToManyThing
	0,  // 6: example.Thing.int_enum:type_name -> example.EnumOne
	0,  // 7: example.Thing.string_enum:type_name -> example.EnumOne
	0,  // 8: example.Thing.int_enum_list:type_name -> example.EnumOne
	0,  // 9: example.Thing.string_enum_list:type_name -> example.EnumOne
	6,  // 10: example.BelongsToThing.created_at:type_name -> google.protobuf.Timestamp
	6,  // 11: example.BelongsToThing.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 12: example.HasOneThing.created_at:type_name -> google.protobuf.Timestamp
	6,  // 13: example.HasOneThing.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 14: example.HasManyThing.created_at:type_name -> google.protobuf.Timestamp
	6,  // 15: example.HasManyThing.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 16: example.ManyToManyThing.created_at:type_name -> google.protobuf.Timestamp
	6,  // 17: example.ManyToManyThing.updated_at:type_name -> google.protobuf.Timestamp
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_demo_example_proto_init() }
func file_demo_example_proto_init() {
	if File_demo_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_demo_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Thing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BelongsToThing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_example_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasOneThing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_example_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HasManyThing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_demo_example_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManyToManyThing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_demo_example_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_demo_example_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_demo_example_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_demo_example_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_demo_example_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_demo_example_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_demo_example_proto_goTypes,
		DependencyIndexes: file_demo_example_proto_depIdxs,
		EnumInfos:         file_demo_example_proto_enumTypes,
		MessageInfos:      file_demo_example_proto_msgTypes,
	}.Build()
	File_demo_example_proto = out.File
	file_demo_example_proto_rawDesc = nil
	file_demo_example_proto_goTypes = nil
	file_demo_example_proto_depIdxs = nil
}
